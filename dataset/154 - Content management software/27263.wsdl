<?xml version="1.0" encoding="UTF-8"?>
<wsdl:definitions targetNamespace="http://www.dkfz-heidelberg.de/menu/tomcat/as/nucleic_gene_finding.wobble" xmlns:impl="http://www.dkfz-heidelberg.de/menu/tomcat/as/nucleic_gene_finding.wobble" xmlns:apachesoap="http://xml.apache.org/xml-soap" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:intf="http://www.dkfz-heidelberg.de/menu/tomcat/as/nucleic_gene_finding.wobble">
  <wsdl:types>
    <schema elementFormDefault="qualified" targetNamespace="http://www.dkfz-heidelberg.de/menu/tomcat/as/nucleic_gene_finding.wobble" xmlns="http://www.w3.org/2001/XMLSchema">
      <xsd:annotation xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xsd:documentation>Wobble base plot</xsd:documentation>
      </xsd:annotation>
      <element name="runAndWaitFor">
        <complexType>
          <sequence>
            <element name="wobble" type="impl:Twobble"/>
          </sequence>
        </complexType>
      </element>
      <simpleType name="TwobbleSequenceSformat">
        <restriction base="xsd:string">
          <enumeration value="gcg"/>
          <enumeration value="gcg8"/>
          <enumeration value="embl"/>
          <enumeration value="swiss"/>
          <enumeration value="fasta"/>
          <enumeration value="ncbi"/>
          <enumeration value="genbank"/>
          <enumeration value="nbrf"/>
          <enumeration value="pir"/>
          <enumeration value="codata"/>
          <enumeration value="strider"/>
          <enumeration value="clustal"/>
          <enumeration value="phylip"/>
          <enumeration value="acedb"/>
          <enumeration value="msf"/>
          <enumeration value="jackknifer"/>
          <enumeration value="jackknifernon"/>
          <enumeration value="nexus"/>
          <enumeration value="nexusnon"/>
          <enumeration value="treecon"/>
          <enumeration value="mega"/>
          <enumeration value="meganon"/>
          <enumeration value="ig"/>
          <enumeration value="staden"/>
          <enumeration value="text"/>
          <enumeration value="raw"/>
        </restriction>
      </simpleType>
      <complexType name="TwobbleSequence">
        <sequence>
          <element maxOccurs="1" minOccurs="0" name="sequence_direct_data" type="xsd:string"/>
          <element maxOccurs="1" minOccurs="0" name="sequence_usa" type="xsd:string"/>
          <element maxOccurs="1" minOccurs="0" name="sformat" type="impl:TwobbleSequenceSformat"/>
          <element maxOccurs="1" minOccurs="0" name="sbegin" type="xsd:long"/>
          <element maxOccurs="1" minOccurs="0" name="send" type="xsd:long"/>
          <element maxOccurs="1" minOccurs="0" name="sprotein" type="xsd:boolean"/>
          <element maxOccurs="1" minOccurs="0" name="snucleotide" type="xsd:boolean"/>
          <element maxOccurs="1" minOccurs="0" name="sreverse" type="xsd:boolean"/>
          <element maxOccurs="1" minOccurs="0" name="slower" type="xsd:boolean"/>
          <element maxOccurs="1" minOccurs="0" name="supper" type="xsd:boolean"/>
        </sequence>
      </complexType>
      <simpleType name="TwobbleGraph_format">
        <restriction base="xsd:string">
          <enumeration value="png"/>
          <enumeration value="postscript"/>
          <enumeration value="colourps"/>
          <enumeration value="hpgl"/>
        </restriction>
      </simpleType>
      <complexType name="Twobble">
        <sequence>
          <element name="sequence" type="impl:TwobbleSequence">
            <xsd:annotation xmlns:xsd="http://www.w3.org/2001/XMLSchema">
              <xsd:documentation>qualifiers for parameter: sequence</xsd:documentation>
            </xsd:annotation>
          </element>
          <element maxOccurs="1" minOccurs="0" name="graph_format" type="impl:TwobbleGraph_format">
            <xsd:annotation xmlns:xsd="http://www.w3.org/2001/XMLSchema">
              <xsd:appinfo xmlns:emboss="http://emboss.sourceforge.net/schema/prompt">
                <emboss:prompt>Format of the graphical output</emboss:prompt>
              </xsd:appinfo>
              <xsd:documentation>Format of the graphical output</xsd:documentation>
            </xsd:annotation>
          </element>
          <element maxOccurs="1" minOccurs="0" name="window" type="xsd:long">
            <xsd:annotation xmlns:xsd="http://www.w3.org/2001/XMLSchema">
              <xsd:appinfo xmlns:emboss="http://emboss.sourceforge.net/schema/prompt">
                <emboss:prompt>Window size in codons</emboss:prompt>
              </xsd:appinfo>
              <xsd:documentation>Window size in codons</xsd:documentation>
            </xsd:annotation>
          </element>
          <element maxOccurs="1" minOccurs="0" name="bases" type="xsd:string">
            <xsd:annotation xmlns:xsd="http://www.w3.org/2001/XMLSchema">
              <xsd:appinfo xmlns:emboss="http://emboss.sourceforge.net/schema/prompt">
                <emboss:prompt>Bases used</emboss:prompt>
              </xsd:appinfo>
              <xsd:documentation>Bases used</xsd:documentation>
            </xsd:annotation>
          </element>
        </sequence>
      </complexType>
      <element name="runAndWaitForResponse">
        <complexType>
          <sequence>
            <element name="wobbleResult" type="impl:TwobbleResult"/>
          </sequence>
        </complexType>
      </element>
      <complexType name="TwobbleResultGraphics_container">
        <sequence>
          <element maxOccurs="1" minOccurs="0" name="Graphics" type="xsd:base64Binary"/>
          <element maxOccurs="1" minOccurs="0" name="Graphics_in_Postscript" type="xsd:string"/>
          <element maxOccurs="unbounded" minOccurs="0" name="Graphics_in_PNG" type="xsd:base64Binary"/>
        </sequence>
      </complexType>
      <complexType name="TwobbleResult">
        <sequence>
          <element maxOccurs="1" minOccurs="0" name="report" type="xsd:string"/>
          <element maxOccurs="1" minOccurs="0" name="detailed_status" type="xsd:long"/>
          <element maxOccurs="1" minOccurs="0" name="outfile" type="xsd:string"/>
          <element maxOccurs="1" minOccurs="0" name="Graphics_container" type="impl:TwobbleResultGraphics_container">
            <xsd:annotation xmlns:xsd="http://www.w3.org/2001/XMLSchema">
              <xsd:documentation>graphics output data</xsd:documentation>
            </xsd:annotation>
          </element>
        </sequence>
      </complexType>
      <complexType name="TSoaplabException">
        <sequence/>
      </complexType>
      <element name="fault" type="impl:TSoaplabException"/>
      <element name="createAndRun">
        <complexType>
          <sequence>
            <element name="wobble" type="impl:Twobble"/>
          </sequence>
        </complexType>
      </element>
      <element name="createAndRunResponse">
        <complexType>
          <sequence>
            <element name="jobid" type="xsd:string"/>
          </sequence>
        </complexType>
      </element>
      <element name="waitFor">
        <complexType>
          <sequence>
            <element name="jobid" type="xsd:string"/>
          </sequence>
        </complexType>
      </element>
      <element name="waitForResponse">
        <complexType/>
      </element>
      <element name="getStatus">
        <complexType>
          <sequence>
            <element name="jobid" type="xsd:string"/>
          </sequence>
        </complexType>
      </element>
      <element name="getStatusResponse">
        <complexType>
          <sequence>
            <element name="status" type="impl:Tstatus"/>
          </sequence>
        </complexType>
      </element>
      <complexType name="Tstatus">
        <sequence>
          <element name="inProgress" type="xsd:boolean"/>
          <element name="detailed" type="xsd:string"/>
          <element name="erroneous" type="xsd:boolean"/>
          <element name="description" type="xsd:string"/>
          <element name="completed" type="xsd:boolean"/>
          <element name="asString" type="xsd:string"/>
          <element name="successful" type="xsd:boolean"/>
        </sequence>
      </complexType>
      <element name="getResults">
        <complexType>
          <sequence>
            <element name="jobid" type="xsd:string"/>
          </sequence>
        </complexType>
      </element>
      <element name="getResultsResponse">
        <complexType>
          <sequence>
            <element name="wobbleResult" type="impl:TwobbleResult"/>
          </sequence>
        </complexType>
      </element>
    </schema>
  </wsdl:types>
  <wsdl:message name="createAndRunResponse">
    <wsdl:part name="parameters" element="impl:createAndRunResponse"/>
  </wsdl:message>
  <wsdl:message name="getResultsResponse">
    <wsdl:part name="parameters" element="impl:getResultsResponse"/>
  </wsdl:message>
  <wsdl:message name="SoaplabException">
    <wsdl:part name="fault" element="impl:fault"/>
  </wsdl:message>
  <wsdl:message name="waitForRequest">
    <wsdl:part name="parameters" element="impl:waitFor"/>
  </wsdl:message>
  <wsdl:message name="getStatusResponse">
    <wsdl:part name="parameters" element="impl:getStatusResponse"/>
  </wsdl:message>
  <wsdl:message name="runAndWaitForRequest">
    <wsdl:part name="parameters" element="impl:runAndWaitFor"/>
  </wsdl:message>
  <wsdl:message name="getStatusRequest">
    <wsdl:part name="parameters" element="impl:getStatus"/>
  </wsdl:message>
  <wsdl:message name="createAndRunRequest">
    <wsdl:part name="parameters" element="impl:createAndRun"/>
  </wsdl:message>
  <wsdl:message name="getResultsRequest">
    <wsdl:part name="parameters" element="impl:getResults"/>
  </wsdl:message>
  <wsdl:message name="runAndWaitForResponse">
    <wsdl:part name="parameters" element="impl:runAndWaitForResponse"/>
  </wsdl:message>
  <wsdl:message name="waitForResponse">
    <wsdl:part name="parameters" element="impl:waitForResponse"/>
  </wsdl:message>
  <wsdl:portType name="nucleic_gene_finding__wobble">
    <wsdl:operation name="runAndWaitFor">
<wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Start the web service and receive the result. Blocks until job is finished.</wsdl:documentation>
      <wsdl:input name="runAndWaitForRequest" message="impl:runAndWaitForRequest"/>
      <wsdl:output name="runAndWaitForResponse" message="impl:runAndWaitForResponse"/>
      <wsdl:fault name="SoaplabException" message="impl:SoaplabException"/>
    </wsdl:operation>
    <wsdl:operation name="createAndRun">
<wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Start the web service and receive a job-id. Returns immediately.</wsdl:documentation>
      <wsdl:input name="createAndRunRequest" message="impl:createAndRunRequest"/>
      <wsdl:output name="createAndRunResponse" message="impl:createAndRunResponse"/>
      <wsdl:fault name="SoaplabException" message="impl:SoaplabException"/>
    </wsdl:operation>
    <wsdl:operation name="waitFor">
<wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Wait until a job (by job-id) has finished. Blocks until job is finished.</wsdl:documentation>
      <wsdl:input name="waitForRequest" message="impl:waitForRequest"/>
      <wsdl:output name="waitForResponse" message="impl:waitForResponse"/>
      <wsdl:fault name="SoaplabException" message="impl:SoaplabException"/>
    </wsdl:operation>
    <wsdl:operation name="getStatus">
<wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Get status information about a running job. Returns immediately.</wsdl:documentation>
      <wsdl:input name="getStatusRequest" message="impl:getStatusRequest"/>
      <wsdl:output name="getStatusResponse" message="impl:getStatusResponse"/>
      <wsdl:fault name="SoaplabException" message="impl:SoaplabException"/>
    </wsdl:operation>
    <wsdl:operation name="getResults">
<wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Get the results of a job (by job-id)</wsdl:documentation>
      <wsdl:input name="getResultsRequest" message="impl:getResultsRequest"/>
      <wsdl:output name="getResultsResponse" message="impl:getResultsResponse"/>
      <wsdl:fault name="SoaplabException" message="impl:SoaplabException"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="nucleic_gene_finding.wobble.derivedSoapBinding" type="impl:nucleic_gene_finding__wobble">
    <wsdlsoap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="runAndWaitFor">
<wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Start the web service and receive the result. Blocks until job is finished.</wsdl:documentation>
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="runAndWaitForRequest">
        <wsdlsoap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="runAndWaitForResponse">
        <wsdlsoap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SoaplabException">
        <wsdlsoap:fault name="SoaplabException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createAndRun">
<wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Start the web service and receive a job-id. Returns immediately.</wsdl:documentation>
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="createAndRunRequest">
        <wsdlsoap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="createAndRunResponse">
        <wsdlsoap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SoaplabException">
        <wsdlsoap:fault name="SoaplabException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="waitFor">
<wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Wait until a job (by job-id) has finished. Blocks until job is finished.</wsdl:documentation>
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="waitForRequest">
        <wsdlsoap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="waitForResponse">
        <wsdlsoap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SoaplabException">
        <wsdlsoap:fault name="SoaplabException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getStatus">
<wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Get status information about a running job. Returns immediately.</wsdl:documentation>
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="getStatusRequest">
        <wsdlsoap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getStatusResponse">
        <wsdlsoap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SoaplabException">
        <wsdlsoap:fault name="SoaplabException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getResults">
<wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Get the results of a job (by job-id)</wsdl:documentation>
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="getResultsRequest">
        <wsdlsoap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getResultsResponse">
        <wsdlsoap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SoaplabException">
        <wsdlsoap:fault name="SoaplabException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="wobbleService">
    <wsdl:port name="nucleic_gene_finding.wobble.derived" binding="impl:nucleic_gene_finding.wobble.derivedSoapBinding">
      <wsdlsoap:address location="http://www.dkfz-heidelberg.de/menu/tomcat/as/nucleic_gene_finding.wobble.derived"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>
