<?xml version="1.0" encoding="UTF-8"?>
<wsdl:definitions targetNamespace="http://www.dkfz-heidelberg.de/menu/tomcat/as/nucleic_gene_finding.tcode" xmlns:impl="http://www.dkfz-heidelberg.de/menu/tomcat/as/nucleic_gene_finding.tcode" xmlns:apachesoap="http://xml.apache.org/xml-soap" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:intf="http://www.dkfz-heidelberg.de/menu/tomcat/as/nucleic_gene_finding.tcode">
  <wsdl:types>
    <schema elementFormDefault="qualified" targetNamespace="http://www.dkfz-heidelberg.de/menu/tomcat/as/nucleic_gene_finding.tcode" xmlns="http://www.w3.org/2001/XMLSchema">
      <xsd:annotation xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xsd:documentation>Fickett TESTCODE statistic to identify
                  protein-coding DNA</xsd:documentation>
      </xsd:annotation>
      <element name="runAndWaitFor">
        <complexType>
          <sequence>
            <element name="tcode" type="impl:Ttcode"/>
          </sequence>
        </complexType>
      </element>
      <simpleType name="TtcodeSequenceSformat">
        <restriction base="xsd:string">
          <enumeration value="gcg"/>
          <enumeration value="gcg8"/>
          <enumeration value="embl"/>
          <enumeration value="swiss"/>
          <enumeration value="fasta"/>
          <enumeration value="ncbi"/>
          <enumeration value="genbank"/>
          <enumeration value="nbrf"/>
          <enumeration value="pir"/>
          <enumeration value="codata"/>
          <enumeration value="strider"/>
          <enumeration value="clustal"/>
          <enumeration value="phylip"/>
          <enumeration value="acedb"/>
          <enumeration value="msf"/>
          <enumeration value="jackknifer"/>
          <enumeration value="jackknifernon"/>
          <enumeration value="nexus"/>
          <enumeration value="nexusnon"/>
          <enumeration value="treecon"/>
          <enumeration value="mega"/>
          <enumeration value="meganon"/>
          <enumeration value="ig"/>
          <enumeration value="staden"/>
          <enumeration value="text"/>
          <enumeration value="raw"/>
        </restriction>
      </simpleType>
      <complexType name="TtcodeSequence">
        <sequence>
          <element maxOccurs="1" minOccurs="0" name="sequence_direct_data" type="xsd:string"/>
          <element maxOccurs="1" minOccurs="0" name="sequence_usa" type="xsd:string"/>
          <element maxOccurs="1" minOccurs="0" name="sformat" type="impl:TtcodeSequenceSformat"/>
          <element maxOccurs="1" minOccurs="0" name="sbegin" type="xsd:long"/>
          <element maxOccurs="1" minOccurs="0" name="send" type="xsd:long"/>
          <element maxOccurs="1" minOccurs="0" name="sprotein" type="xsd:boolean"/>
          <element maxOccurs="1" minOccurs="0" name="snucleotide" type="xsd:boolean"/>
          <element maxOccurs="1" minOccurs="0" name="sreverse" type="xsd:boolean"/>
          <element maxOccurs="1" minOccurs="0" name="slower" type="xsd:boolean"/>
          <element maxOccurs="1" minOccurs="0" name="supper" type="xsd:boolean"/>
        </sequence>
      </complexType>
      <simpleType name="TtcodeGraph_format">
        <restriction base="xsd:string">
          <enumeration value="png"/>
          <enumeration value="postscript"/>
          <enumeration value="colourps"/>
          <enumeration value="hpgl"/>
        </restriction>
      </simpleType>
      <complexType name="TtcodeDatafile">
        <sequence>
          <element maxOccurs="1" minOccurs="0" name="datafile_direct_data" type="xsd:string"/>
          <element maxOccurs="1" minOccurs="0" name="datafile_url" type="xsd:string"/>
        </sequence>
      </complexType>
      <complexType name="Ttcode">
        <sequence>
          <element name="sequence" type="impl:TtcodeSequence">
            <xsd:annotation xmlns:xsd="http://www.w3.org/2001/XMLSchema">
              <xsd:documentation>qualifiers for parameter: sequence</xsd:documentation>
            </xsd:annotation>
          </element>
          <element name="window" type="xsd:long">
            <xsd:annotation xmlns:xsd="http://www.w3.org/2001/XMLSchema">
              <xsd:appinfo xmlns:emboss="http://emboss.sourceforge.net/schema/prompt">
                <emboss:prompt>Length of sliding window</emboss:prompt>
              </xsd:appinfo>
              <xsd:documentation>This is the number of nucleotide bases over which the
           TESTCODE statistic will be performed each time. The window will
           then slide along the sequence, covering the same number of bases
           each time.</xsd:documentation>
            </xsd:annotation>
          </element>
          <element maxOccurs="1" minOccurs="0" name="graph_format" type="impl:TtcodeGraph_format">
            <xsd:annotation xmlns:xsd="http://www.w3.org/2001/XMLSchema">
              <xsd:appinfo xmlns:emboss="http://emboss.sourceforge.net/schema/prompt">
                <emboss:prompt>Format of the graphical output</emboss:prompt>
              </xsd:appinfo>
              <xsd:documentation>Format of the graphical output</xsd:documentation>
            </xsd:annotation>
          </element>
          <element maxOccurs="1" minOccurs="0" name="datafile" type="impl:TtcodeDatafile">
            <xsd:annotation xmlns:xsd="http://www.w3.org/2001/XMLSchema">
              <xsd:appinfo xmlns:emboss="http://emboss.sourceforge.net/schema/prompt">
                <emboss:prompt>Testcode data file</emboss:prompt>
              </xsd:appinfo>
              <xsd:documentation>The default data file is Etcode.dat and contains coding
           probabilities for each base. The probabilities are for both
           positional and compositional information.</xsd:documentation>
            </xsd:annotation>
          </element>
          <element maxOccurs="1" minOccurs="0" name="step" type="xsd:long">
            <xsd:annotation xmlns:xsd="http://www.w3.org/2001/XMLSchema">
              <xsd:appinfo xmlns:emboss="http://emboss.sourceforge.net/schema/prompt">
                <emboss:prompt>Stepping increment for the window</emboss:prompt>
              </xsd:appinfo>
              <xsd:documentation>The selected window will, by default, slide along the
           nucleotide sequence by three bases at a time, retaining the frame
           (although the algorithm is not frame sensitive). This may be
           altered to increase or decrease the increment of the slide.</xsd:documentation>
            </xsd:annotation>
          </element>
        </sequence>
      </complexType>
      <element name="runAndWaitForResponse">
        <complexType>
          <sequence>
            <element name="tcodeResult" type="impl:TtcodeResult"/>
          </sequence>
        </complexType>
      </element>
      <complexType name="TtcodeResultGraphics_container">
        <sequence>
          <element maxOccurs="1" minOccurs="0" name="Graphics" type="xsd:base64Binary"/>
          <element maxOccurs="1" minOccurs="0" name="Graphics_in_Postscript" type="xsd:string"/>
          <element maxOccurs="unbounded" minOccurs="0" name="Graphics_in_PNG" type="xsd:base64Binary"/>
        </sequence>
      </complexType>
      <complexType name="TtcodeResult">
        <sequence>
          <element maxOccurs="1" minOccurs="0" name="report" type="xsd:string"/>
          <element maxOccurs="1" minOccurs="0" name="detailed_status" type="xsd:long"/>
          <element maxOccurs="1" minOccurs="0" name="outfile" type="xsd:string"/>
          <element maxOccurs="1" minOccurs="0" name="Graphics_container" type="impl:TtcodeResultGraphics_container">
            <xsd:annotation xmlns:xsd="http://www.w3.org/2001/XMLSchema">
              <xsd:documentation>graphics output data</xsd:documentation>
            </xsd:annotation>
          </element>
        </sequence>
      </complexType>
      <complexType name="TSoaplabException">
        <sequence/>
      </complexType>
      <element name="fault" type="impl:TSoaplabException"/>
      <element name="createAndRun">
        <complexType>
          <sequence>
            <element name="tcode" type="impl:Ttcode"/>
          </sequence>
        </complexType>
      </element>
      <element name="createAndRunResponse">
        <complexType>
          <sequence>
            <element name="jobid" type="xsd:string"/>
          </sequence>
        </complexType>
      </element>
      <element name="waitFor">
        <complexType>
          <sequence>
            <element name="jobid" type="xsd:string"/>
          </sequence>
        </complexType>
      </element>
      <element name="waitForResponse">
        <complexType/>
      </element>
      <element name="getStatus">
        <complexType>
          <sequence>
            <element name="jobid" type="xsd:string"/>
          </sequence>
        </complexType>
      </element>
      <element name="getStatusResponse">
        <complexType>
          <sequence>
            <element name="status" type="impl:Tstatus"/>
          </sequence>
        </complexType>
      </element>
      <complexType name="Tstatus">
        <sequence>
          <element name="inProgress" type="xsd:boolean"/>
          <element name="detailed" type="xsd:string"/>
          <element name="erroneous" type="xsd:boolean"/>
          <element name="description" type="xsd:string"/>
          <element name="completed" type="xsd:boolean"/>
          <element name="asString" type="xsd:string"/>
          <element name="successful" type="xsd:boolean"/>
        </sequence>
      </complexType>
      <element name="getResults">
        <complexType>
          <sequence>
            <element name="jobid" type="xsd:string"/>
          </sequence>
        </complexType>
      </element>
      <element name="getResultsResponse">
        <complexType>
          <sequence>
            <element name="tcodeResult" type="impl:TtcodeResult"/>
          </sequence>
        </complexType>
      </element>
    </schema>
  </wsdl:types>
  <wsdl:message name="getResultsResponse">
    <wsdl:part name="parameters" element="impl:getResultsResponse"/>
  </wsdl:message>
  <wsdl:message name="createAndRunResponse">
    <wsdl:part name="parameters" element="impl:createAndRunResponse"/>
  </wsdl:message>
  <wsdl:message name="waitForRequest">
    <wsdl:part name="parameters" element="impl:waitFor"/>
  </wsdl:message>
  <wsdl:message name="SoaplabException">
    <wsdl:part name="fault" element="impl:fault"/>
  </wsdl:message>
  <wsdl:message name="getStatusRequest">
    <wsdl:part name="parameters" element="impl:getStatus"/>
  </wsdl:message>
  <wsdl:message name="getStatusResponse">
    <wsdl:part name="parameters" element="impl:getStatusResponse"/>
  </wsdl:message>
  <wsdl:message name="runAndWaitForRequest">
    <wsdl:part name="parameters" element="impl:runAndWaitFor"/>
  </wsdl:message>
  <wsdl:message name="createAndRunRequest">
    <wsdl:part name="parameters" element="impl:createAndRun"/>
  </wsdl:message>
  <wsdl:message name="runAndWaitForResponse">
    <wsdl:part name="parameters" element="impl:runAndWaitForResponse"/>
  </wsdl:message>
  <wsdl:message name="getResultsRequest">
    <wsdl:part name="parameters" element="impl:getResults"/>
  </wsdl:message>
  <wsdl:message name="waitForResponse">
    <wsdl:part name="parameters" element="impl:waitForResponse"/>
  </wsdl:message>
  <wsdl:portType name="nucleic_gene_finding__tcode">
    <wsdl:operation name="runAndWaitFor">
<wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Start the web service and receive the result. Blocks until job is finished.</wsdl:documentation>
      <wsdl:input name="runAndWaitForRequest" message="impl:runAndWaitForRequest"/>
      <wsdl:output name="runAndWaitForResponse" message="impl:runAndWaitForResponse"/>
      <wsdl:fault name="SoaplabException" message="impl:SoaplabException"/>
    </wsdl:operation>
    <wsdl:operation name="createAndRun">
<wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Start the web service and receive a job-id. Returns immediately.</wsdl:documentation>
      <wsdl:input name="createAndRunRequest" message="impl:createAndRunRequest"/>
      <wsdl:output name="createAndRunResponse" message="impl:createAndRunResponse"/>
      <wsdl:fault name="SoaplabException" message="impl:SoaplabException"/>
    </wsdl:operation>
    <wsdl:operation name="waitFor">
<wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Wait until a job (by job-id) has finished. Blocks until job is finished.</wsdl:documentation>
      <wsdl:input name="waitForRequest" message="impl:waitForRequest"/>
      <wsdl:output name="waitForResponse" message="impl:waitForResponse"/>
      <wsdl:fault name="SoaplabException" message="impl:SoaplabException"/>
    </wsdl:operation>
    <wsdl:operation name="getStatus">
<wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Get status information about a running job. Returns immediately.</wsdl:documentation>
      <wsdl:input name="getStatusRequest" message="impl:getStatusRequest"/>
      <wsdl:output name="getStatusResponse" message="impl:getStatusResponse"/>
      <wsdl:fault name="SoaplabException" message="impl:SoaplabException"/>
    </wsdl:operation>
    <wsdl:operation name="getResults">
<wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Get the results of a job (by job-id)</wsdl:documentation>
      <wsdl:input name="getResultsRequest" message="impl:getResultsRequest"/>
      <wsdl:output name="getResultsResponse" message="impl:getResultsResponse"/>
      <wsdl:fault name="SoaplabException" message="impl:SoaplabException"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="nucleic_gene_finding.tcode.derivedSoapBinding" type="impl:nucleic_gene_finding__tcode">
    <wsdlsoap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="runAndWaitFor">
<wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Start the web service and receive the result. Blocks until job is finished.</wsdl:documentation>
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="runAndWaitForRequest">
        <wsdlsoap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="runAndWaitForResponse">
        <wsdlsoap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SoaplabException">
        <wsdlsoap:fault name="SoaplabException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createAndRun">
<wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Start the web service and receive a job-id. Returns immediately.</wsdl:documentation>
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="createAndRunRequest">
        <wsdlsoap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="createAndRunResponse">
        <wsdlsoap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SoaplabException">
        <wsdlsoap:fault name="SoaplabException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="waitFor">
<wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Wait until a job (by job-id) has finished. Blocks until job is finished.</wsdl:documentation>
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="waitForRequest">
        <wsdlsoap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="waitForResponse">
        <wsdlsoap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SoaplabException">
        <wsdlsoap:fault name="SoaplabException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getStatus">
<wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Get status information about a running job. Returns immediately.</wsdl:documentation>
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="getStatusRequest">
        <wsdlsoap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getStatusResponse">
        <wsdlsoap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SoaplabException">
        <wsdlsoap:fault name="SoaplabException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getResults">
<wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Get the results of a job (by job-id)</wsdl:documentation>
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="getResultsRequest">
        <wsdlsoap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getResultsResponse">
        <wsdlsoap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SoaplabException">
        <wsdlsoap:fault name="SoaplabException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="tcodeService">
    <wsdl:port name="nucleic_gene_finding.tcode.derived" binding="impl:nucleic_gene_finding.tcode.derivedSoapBinding">
      <wsdlsoap:address location="http://www.dkfz-heidelberg.de/menu/tomcat/as/nucleic_gene_finding.tcode.derived"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>
